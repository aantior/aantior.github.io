<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo 安装成功：经历曲折，终于搞定！</title>
    <link href="/2023_05_14_hexo-installation-succeeded/"/>
    <url>/2023_05_14_hexo-installation-succeeded/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-安装成功：经历曲折，终于搞定！"><a href="#Hexo-安装成功：经历曲折，终于搞定！" class="headerlink" title="Hexo 安装成功：经历曲折，终于搞定！"></a>Hexo 安装成功：经历曲折，终于搞定！</h1><p>自从将blog迁移主机之后，不知道哪里出了问题，访问速度一直挺慢的。尝试了很多种办法，到现在图片的加载速度还是超慢的。</p><p>考虑到博客的访问速度极大地影响了我写博客的心情，我决定迁移博客到 GitHub pages。</p><p>由于是 GitHub 的小白，之前没有接触过<code>git</code>命令。我找了好些博客来学习如何安装部署。不知道是由于网络信息变更得太快还是大家写作都有些许浮躁，许多关键的问题都一笔带过，严格按照已有的教程很难顺利部署。</p><p>既然我已经成功部署，在这里记录一下部署的方式，方便后人。</p><h2 id="安装和配置Hexo"><a href="#安装和配置Hexo" class="headerlink" title="安装和配置Hexo"></a>安装和配置Hexo</h2><h3 id="下载安装Node-js和Git"><a href="#下载安装Node-js和Git" class="headerlink" title="下载安装Node.js和Git"></a>下载安装Node.js和Git</h3><p>Node.js 下载地址：<a href="https://nodejs.org/download/">https://nodejs.org/download/</a> ，下载完后可以使用 <code>npm</code> 开头的命令。如何安装 Node.js 详见<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html/">此文章</a>。</p><p>Git 下载地址： <a href="http://git-scm.com/downloads/">http://git-scm.com/downloads/</a> ， 下载完后可以使用 <code>git</code> 开头的命令。如何安装 Git 详见<a href="https://www.runoob.com/git/git-install-setup.html/">此文章</a>。</p><p>解决<code>npm</code>命令过慢，切换淘宝源<a href="https://cloud.tencent.com/developer/article/1586040">^npm切换淘宝源</a>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry http://registry.npm.taobao.org<br></code></pre></td></tr></table></figure><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>当你已经安装好 Node.js 和 Git 后，直接使用 npm 安装 Hexo。</p><p>新建博客目录，这里新建一个 <code>blog.antior.cn</code> 的目录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd &lt;folder&gt; # 这里 &lt;folder&gt; 替换为 Hexo 的路径 blog.antior.cn<br>npm install hexo-cli -g # 使用 npm 安装<br>hexo init<br>hexo -v # 查看本地环境版本号。<br>hexo generate # 或 hexo g<br>hexo server # 或 hexo s<br></code></pre></td></tr></table></figure><p>此时你可以访问 <a href="http://localhost:4000/">http://localhost:4000/</a> 查看预览。</p><h3 id="使用hexo写文章"><a href="#使用hexo写文章" class="headerlink" title="使用hexo写文章"></a>使用hexo写文章</h3><p>输入命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><p>新建一篇文件名为 <code>&lt;title&gt;.md</code> 文章在 <code>.\source\_posts</code>。如果没有设置 layout，将使用默认的 layout。可能的参数有：post, page。如果标题包含空格，请使用引号括起来。</p><h3 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h3><p>这里举例安装typing 主题。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/geekplux/hexo-theme-typing themes/typing <br></code></pre></td></tr></table></figure><p>修改 Hexo 目录下 _config.yml 配置文件中的 theme 属性为 typing 以启用主题。</p><h3 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h3><p>使用文本编辑工具打开 _config.xml，按需求修改文件内容。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs yaml">  <span class="hljs-comment"># Site</span><br>      <span class="hljs-attr">title:</span> <span class="hljs-string">Undercurrent</span> <span class="hljs-comment"># 博客名称，网站标题</span><br>      <span class="hljs-attr">subtitle:</span> <span class="hljs-string">Another</span> <span class="hljs-string">blog.</span> <span class="hljs-comment"># 副标题</span><br>      <span class="hljs-attr">description:</span> <span class="hljs-comment"># 网站描述</span><br>      <span class="hljs-attr">author:</span> <span class="hljs-string">Fan</span> <span class="hljs-string">Rongbin</span> <span class="hljs-comment"># 作者姓名</span><br>      <span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span> <span class="hljs-comment"># 网站语言</span><br>      <span class="hljs-attr">timezone:</span> <span class="hljs-string">Asia/Shanghai</span> <span class="hljs-comment"># 网站所用时区</span><br><br>  <span class="hljs-comment"># URL</span><br>  <span class="hljs-comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://fanrongbin.com/</span> <span class="hljs-comment"># 网站网址</span><br>      <span class="hljs-attr">root:</span> <span class="hljs-string">/</span><br>      <span class="hljs-attr">permalink:</span> <span class="hljs-string">:year/:month/:day/:title/</span><br>      <span class="hljs-attr">permalink_defaults:</span><br></code></pre></td></tr></table></figure><p>注意：如果使用独立域名，请记得修改 url 的值为独立域名的网址。</p><h2 id="配置Hexo部署"><a href="#配置Hexo部署" class="headerlink" title="配置Hexo部署"></a>配置Hexo部署</h2><p>使用<code>hexo s</code>确认博客在本地可以使用后，就需要部署博客到网站上了。</p><h3 id="配置-GitHub-Pages"><a href="#配置-GitHub-Pages" class="headerlink" title="配置 GitHub Pages"></a>配置 GitHub Pages</h3><p>GitHub Pages 是一个免费的静态网站托管平台，既可以用于展示你在 GitHub 上的项目，也可以用来做个人博客。（国内有类似的服务 Coding Pages）</p><p>每个帐号只能有一个用于存放个人主页的仓库，命名必须为 <code>&lt;username&gt;/&lt;username&gt;.github.io</code>，创建后的主页将通过 <code>http://&lt;username&gt;.github.io/</code> 来访问。</p><h3 id="创建-SSH-Key"><a href="#创建-SSH-Key" class="headerlink" title="创建 SSH Key"></a>创建 SSH Key</h3><p><code>win+R</code>+<code>CMD</code>打开CMD窗口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd .ssh<br>dir<br>mkdir key_backup<br>copy id_rsa* key_backup<br>del id_rsa*<br></code></pre></td></tr></table></figure><h3 id="保证git能够访问"><a href="#保证git能够访问" class="headerlink" title="保证git能够访问"></a>保证git能够访问</h3><p>建立<code>.\ssh\config</code>文件，使得网站从ssl访问而不是ssh。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus">Host github<span class="hljs-selector-class">.com</span><br>Hostname ssh<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.com</span><br>Port <span class="hljs-number">443</span><br></code></pre></td></tr></table></figure><h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><h3 id="每次提交后Custom-domain丢失"><a href="#每次提交后Custom-domain丢失" class="headerlink" title="每次提交后Custom domain丢失"></a>每次提交后Custom domain丢失</h3><p>之前每次提交后访问博客都会提示域名没有绑定，查看Custom domain已经变成了空白。参考这篇文章[^hexo 发布之后 gitpage 自定义域名失效 ]，在</p><p><img src="/2023_05_14_hexo-installation-succeeded/image-20230515200605285.png" alt="image-20230515200605285"></p><p>ref:</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
